// Code generated by goctl. DO NOT EDIT.
// Source: relationship.proto

package server

import (
	"context"

	"lightIM/rpc/relationship/internal/logic"
	"lightIM/rpc/relationship/internal/svc"
	"lightIM/rpc/relationship/types"
)

type RelationShipServer struct {
	svcCtx *svc.ServiceContext
	types.UnimplementedRelationShipServer
}

func NewRelationShipServer(svcCtx *svc.ServiceContext) *RelationShipServer {
	return &RelationShipServer{
		svcCtx: svcCtx,
	}
}

func (s *RelationShipServer) AddFriend(ctx context.Context, in *types.AddFriendReq) (*types.AddFriendResp, error) {
	l := logic.NewAddFriendLogic(ctx, s.svcCtx)
	return l.AddFriend(in)
}

func (s *RelationShipServer) FriendAck(ctx context.Context, in *types.AddFriendAck) (*types.AddFriendAckResp, error) {
	l := logic.NewFriendAckLogic(ctx, s.svcCtx)
	return l.FriendAck(in)
}

func (s *RelationShipServer) DelFriend(ctx context.Context, in *types.DelFriendReq) (*types.DelFriendResp, error) {
	l := logic.NewDelFriendLogic(ctx, s.svcCtx)
	return l.DelFriend(in)
}

func (s *RelationShipServer) FriendList(ctx context.Context, in *types.FriendListReq) (*types.FriendListResp, error) {
	l := logic.NewFriendListLogic(ctx, s.svcCtx)
	return l.FriendList(in)
}

func (s *RelationShipServer) CreateGroup(ctx context.Context, in *types.CreateGroupReq) (*types.CreateGroupResp, error) {
	l := logic.NewCreateGroupLogic(ctx, s.svcCtx)
	return l.CreateGroup(in)
}

func (s *RelationShipServer) JoinGroup(ctx context.Context, in *types.JoinGroupReq) (*types.JoinGroupResp, error) {
	l := logic.NewJoinGroupLogic(ctx, s.svcCtx)
	return l.JoinGroup(in)
}

func (s *RelationShipServer) GroupAck(ctx context.Context, in *types.JoinGroupAck) (*types.JoinGroupAckResp, error) {
	l := logic.NewGroupAckLogic(ctx, s.svcCtx)
	return l.GroupAck(in)
}

func (s *RelationShipServer) LeaveGroup(ctx context.Context, in *types.LeaveGroupReq) (*types.LeaveGroupReq, error) {
	l := logic.NewLeaveGroupLogic(ctx, s.svcCtx)
	return l.LeaveGroup(in)
}

func (s *RelationShipServer) GroupMemberList(ctx context.Context, in *types.GroupMemberListReq) (*types.GroupMemberListResp, error) {
	l := logic.NewGroupMemberListLogic(ctx, s.svcCtx)
	return l.GroupMemberList(in)
}
