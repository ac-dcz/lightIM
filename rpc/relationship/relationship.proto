syntax = "proto3";

package relationship;

option go_package = "./types";

message Base{
  int32 code = 1;
  string msg = 2;
}

message AddFriendReq{
  int64 from = 1;
  int64 to = 2;
}

message AddFriendResp{
  Base base = 1;
  string AddReqId = 2;//请求Id
}

message AddFriendAck{
  string AddReqId = 1;
  bool accept = 2;
}

message AddFriendAckResp{
  Base base = 1;
  bool successful = 2;
}

message DelFriendReq{
  int64 from = 1;
  int64 to = 2;
}

message DelFriendResp{
  Base base = 1;
  bool successful = 2;
}

message FriendListReq{
  int64 from = 1;
}

message FriendListResp{
  Base base = 1;
  repeated int64 FriendList = 2;
}

message CreateGroupReq{
  int64 From = 1;
  string GroupName = 2;
  string GroupDesc = 3;
}

message  CreateGroupResp{
  Base base = 1;
  int64 gid = 2;
  bytes groupNum = 3;
}

message JoinGroupReq{
  int64 From = 1;
  bytes groupNum = 2;
}

message JoinGroupResp{
  Base base = 1;
  string JoinReqId = 2;
}

message  JoinGroupAck{
  string JoinReqId = 1;
  bool Accept = 2;
}

message  JoinGroupAckResp{
  Base base = 1;
}

message LeaveGroupReq{
  int64 From = 1;
  int64 GId = 2;
}

message LeaveGroupResp{
  Base base = 1;
}

message GroupMemberListReq{
  int64 GroupId = 1;
}

message  GroupMemberListResp{
  Base base = 1;
  repeated int64  UidList = 2;
}

service RelationShip{
  rpc AddFriend(AddFriendReq) returns(AddFriendResp);
  rpc FriendAck(AddFriendAck) returns(AddFriendAckResp);
  rpc DelFriend(DelFriendReq) returns(DelFriendResp);
  rpc FriendList(FriendListReq) returns(FriendListResp);
  rpc CreateGroup(CreateGroupReq) returns(CreateGroupResp);
  rpc JoinGroup(JoinGroupReq) returns(JoinGroupResp);
  rpc GroupAck(JoinGroupAck) returns(JoinGroupAckResp);
  rpc LeaveGroup(LeaveGroupReq) returns(LeaveGroupReq);
  rpc GroupMemberList(GroupMemberListReq) returns(GroupMemberListResp);
}