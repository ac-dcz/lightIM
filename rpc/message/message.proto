syntax = "proto3";

package message;

option go_package = "./types";

message Base{
  int32 code = 1;
  string msg = 2;
}

message CreateNewReq{
  int64 id = 1;
  bool isGroup = 2;
}

message CreateNewResp{
  Base base = 1;
}

message MsgEntry{
  uint32 Type = 1;
  uint32 status = 2;
  int64 from = 3;
  int64 to = 4;
  bool isGroup = 5;
  uint32 encodingType = 6;
  bytes data = 7;
  int64 timeStamp = 8;
}

message HistoryReq{
  int64 from = 1;
  int64 to = 2;
}

message HistoryResp{
  Base base = 1;
  repeated MsgEntry histories = 2;
}

message GroupHistoryReq{
  int64 groupId = 1;
}

message GroupHistoryResp{
  Base base = 1;
  repeated MsgEntry histories = 2;
}

message UnReadReq {
  int64 uid = 1;
}

message UnReadResp{
  Base base = 1;
  repeated MsgEntry msgEntries = 2;
}

message MsgReq{
  string msgMongoId = 1;
}

message MsgResp{
  Base base = 1;
  MsgEntry msg = 2;
}

message UpdateMsgStatusReq{
  string msgMongoId = 1;
  int32 Status = 2;
}

message UpdateMsgStatusResp{
  Base base = 1;
}

service Message {
  rpc CreateNew(CreateNewReq) returns(CreateNewResp);
  rpc GetHistory(HistoryReq) returns(HistoryResp);
  rpc GetGroupHistory(GroupHistoryReq) returns(GroupHistoryResp);
  rpc GetUnRead(UnReadReq) returns(UnReadResp);
  rpc GetMessage(MsgReq) returns(MsgResp);
  rpc UpdateMsgStatus(UpdateMsgStatusReq) returns(UpdateMsgStatusResp);
}

